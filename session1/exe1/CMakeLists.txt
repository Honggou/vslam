
cmake_minimum_required(VERSION 3.2 FATAL_ERROR)

project(Tutorial
LANGUAGES CXX)

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Release)
ENDIF()


set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED on)

#set(CMAKE_INSTALL_PREFIX "")

# The version number
set(Tutorial_VERSION_MAJOR 1)
set(Tutorial_VERSION_MINOR 0)

# add the binary tree to the search path for include files
# so that we will find tutorial_config.h
include_directories("${PROJECT_BINARY_DIR}")

# print location variables
message(STATUS "CMAKE_BINARY_DIR=${CMAKE_BINARY_DIR}")
message(STATUS "CMAKE_COMMAND=${CMAKE_COMMAND}")
message(STATUS "CMAKE_SOURCE_DIR =${CMAKE_SOURCE_DIR}")
message(STATUS "CMAKE_CURRENT_BINARY_DIR=${CMAKE_CURRENT_BINARY_DIR}")
message(STATUS "CMAKE_CURRENT_SOURCE_DIR=${CMAKE_CURRENT_SOURCE_DIR}")
message(STATUS "CMAKE_CURRENT_LIST_FILE=${CMAKE_CURRENT_LIST_FILE}")
message(STATUS "CMAKE_CURRENT_LIST_DIR=${CMAKE_CURRENT_LIST_DIR}")
message(STATUS "CMAKE_FILES_DIRECTORY=${CMAKE_FILES_DIRECTORY}")
message(STATUS "CMAKE_ROOT=${CMAKE_ROOT}")
message(STATUS "CMAKE_MODULE_PATH=${CMAKE_MODULE_PATH}")
message(STATUS "PROJECT_NAME=${PROJECT_NAME}")
message(STATUS "CMAKE_PROJECT_NAME=${CMAKE_PROJECT_NAME}")
message(STATUS "PROJECT_BINARY_DIR=${PROJECT_BINARY_DIR}")
message(STATUS "PROJECT_SOURCE_DIR=${PROJECT_SOURCE_DIR}")
message(STATUS "Tutorial_BINARY_DIR=${Tutorial_BINARY_DIR}")
message(STATUS "Tutorial_SOURCE_DIR=${Tutorial_SOURCE_DIR}")
message(STATUS "CMAKE_LIBRARY_PATH=${CMAKE_LIBRARY_PATH}")
message(STATUS "CMAKE_LIBRARY_PATH_FLAG=${CMAKE_LIBRARY_PATH_FLAG}")
message(STATUS "CMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}")

add_subdirectory(src)